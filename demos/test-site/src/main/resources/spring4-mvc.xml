<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="org.itboys" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true"/>
            </bean>
  		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <value>
	            json=application/json
	            xml=application/xml
	        </value>
	    </property>
	</bean>
	
	<mvc:default-servlet-handler/>
	
	 <bean id="velocityConfigurer"   
        class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">  
        <!-- 正式环境可配置相对路径 亦可配置绝对路径 开发时候配绝对路径修改vm模板无需启动  --> 
        <property name="resourceLoaderPath" value="${velocity.template.path}" />
        <property name="velocityProperties">     
	        <props>     
	             <prop key="input.encoding">UTF-8</prop>     
	             <prop key="output.encoding">UTF-8</prop>  
	             <prop key="velocimacro.library.autoreload">true</prop>
	        </props>     
      	</property>     
    </bean>   
    
	<bean id="viewResolver" 
		 class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">  
		 <property name="exposeRequestAttributes" value="true" />
		 <property name="exposeSessionAttributes" value="true" />
		 <property name="exposeSpringMacroHelpers" value="true" />
		 <property name="contentType" value="text/html;charset=UTF-8" />
         <property name="cache" value="true" /> 
         <property name="prefix" value="/screen/" />
         <property name="suffix" value=".vm" />
         <property name="layoutUrl" value="/layout/common-layout.vm" />
		 <property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml" />
		 <property name="requestContextAttribute" value="rc" />
    </bean> 
    
    <bean class="org.itboys.framework.spring.config.ItboysPropertyPlaceholderConfigurer" />
    
</beans>
